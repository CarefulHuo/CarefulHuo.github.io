[{"title":"https基础概念","date":"2020-07-05T07:32:59.000Z","path":"posts/8ac28a0d/","text":"Http协议 什么是HTTP协议？ HTTP协议是一种超文本传输协议，是一种请求，响应式协议。 HTTP协议的特点 支持浏览器(客户端)/服务器模式 简单快速，浏览器向服务器发起请求时，只需要传送请求方式和路径 灵活，可以发送任意类型的数据 无状态，Http是无状态协议，无状态是指对事物处理没有记忆能力 HTTP消息 HTTP消息有几种？ 两种，一个请求消息，一个响应消息。 请求和响应的定义 当浏览器向服务器发送请求数据的时候，即http请求消息 当服务器向浏览器发送响应数据的时候，即http响应消息 HTTP请求消息 http请求包含几个部分？ 三个部分，请求方式，资源路径，http版本 http常用的请求方式 请求方式 含义 GET 请求获取请求行URL所标识的资源 POST 向指定资源提交数据，请求服务器进行处理 HEAD 请求获取由URL所标识资源的响应消息头 PUT 将网页放到指定的URL位置上(上传/移动) DELETE 请求服务器删除URL所标识的资源 TRACE 请求服务器回送收到的请求消息，主要用于测试和诊断 CONNECT 保留将来使用 OPTIONS 请求查询服务器的性能，或查询与资源相关的选项和需求 注意：浏览器表单默认的是GET请求 请求方式 区别 GET 请求方式的参数信息都会在URL地址栏显示，而且通过请求参数传递数据，所以最多不超过1KB大小 POST 请求内容隐藏在实体内容中，通过实体内容进行数据传递，所以没有数据大小限制 请求头字段 含义 Accept:text/html 客户端希望接收HTML文本 Accept:image/gif 客户端希望接收GIF格式的图像资源 Accept:image/* 客户端可以接收所有image格式的子类型 Accept:*/* 客户端可以接收任意类型的数据 Accept-Charset 告知服务端，客户端所用的字符集 Accept-Encoding 用于指定客户端能够进行解码的数据编码方式 Accept-Language 客户端期望服务端返回那个国家的语言文档 Host 指定资源所在的主机和端口号 Max-Forward 指当前请求可以经过的代理服务器数量,每经过一个，数量减一 Referer 单击超链接向服务器发送GET请求时，浏览器会在发送的请求中加上该字段(防止盗链) User-Agent 指定浏览器或者其他客户端程序所使用的操作系统及版本，浏览器及版本，浏览器渲染引擎，浏览器语言 HTTP响应消息 HTTP响应消息包含几个部分 三个部分，响应状态行、响应消息头实体内容 响应状态行 HTTP版本 1.0、1.1 状态码及描述信息 状态码 描述信息 1xx 请求已经接受，需要继续处理 2xx 请求已经被服务器成功理解并接受 3xx 为完成请求，客户端需进一步细化请求 4xx 客户端的请求有错误 5xx 服务端出现错误 常用的状态码 状态码 状态信息 描述信息 200 正常 客户端请求成功，响应消息返回正常的请求结果 400 请求无效 客户端不正确的语法格式 403 禁止 服务端理解客户端的请求，但是拒绝处理 404 找不到 表示服务器不存在客户端存在的资源 500 内部服务器错误 大部分情况下是服务器端的CGI，jsp, ASP出现错误 响应消息头 说明 服务器端向客户端传递附加信息，包括服务程序名，被请求资源需要的认证方式，重定向地址，客户端请求资源的最后修改时间。 常见的响应消息头 响应消息头 描述内容 Accept-Range 说明服务器是否接收客户端使用Range请求头字段请求资源 Age 指出当前网页文档可以在客户端或代理服务器中缓存的有效时间 Etag 用于向客户端传送代表实体内容特征的标记信息，这些标记信息也称为实体标签，每个版本资源的实体标签是不同的，通过这个标签可以判断不同时间下，同一资源路径下的实体内容是否相同 Location 用于通知客户端获取请求文档的新地址 Retry-After 该字段可以与503状态码配合使用，告诉客户端什么时候可以重新发送请求，也可以与任何一个3xx状态码配合使用，告诉客户端处理重定向的最小延时时间 Server 用于指定服务器软件产品的名称 Vary 用于指定影响了服务器所生成的响应内容的那些请求头字段名 Refresh 用于告诉浏览器自动刷新页面的时间，是以秒为基本单位 Content-Disposition 用于服务器希望浏览器直接处理响应的实体内容，而是让用户选择将实体内容保存到一个文件中 实体内容 服务器根据客户端的请求所做出的处理结果 HTTP(请求或响应)消息中的其他字段 通用字段 字段名 字段描述 Cache-Control 用于通知位于客户端与服务器之间的代理服务器如何使用已缓存的页面 Connection 用于指定处理完本次请求/响应后，客户端与服务器是否还要保持连接 Date 用于表示HTTP消息产生的当前时间 Pragma 通知代理服务器和客户端如何使用缓存页面- Transfer-Encoding 通过该字段通知客户端响应数据的长度，因为HTTP1.1协议是持久化协议 Via 用于指定HTTP消息所途径的代理服务器所使用的协议与主机名 Warning 用于说明其他头字段和状态码不能说明的一些警告信息 实体头字段 字段名 字段描述 Allow 指定请求资源所支持的请求方式 Content-Language 用于指定返回网页文档的国家语言类型 Content-Length 用于表示实体内容的长度 Content-Location 用于指定响应消息中实体内容的实际位置路径(当一个请求资源有多个国家语言版本的时候，每个国家语言版本都有自己的位置，这时，请求资源路径和响应的实体内容的实际位置路径可能是不同的) Content-Type Content-Encoding 用于指定实体内容的压缩编码格式，服务器端对实体内容的压缩不影响实体内容的MIME类型，被压缩的实体内容在客户端被解压的时候，MIME类型与Content-Type头字段指定的类型一致 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","content":"<h4 id=\"Http协议\"><a href=\"#Http协议\" class=\"headerlink\" title=\"Http协议\"></a>Http协议</h4><ol>\n<li><strong>什么是HTTP协议？</strong><br> HTTP协议是一种超文本传输协议，是一种请求，响应式协议。<a id=\"more\"></a></li>\n<li><strong>HTTP协议的特点</strong><ol>\n<li>支持浏览器(客户端)/服务器模式</li>\n<li>简单快速，浏览器向服务器发起请求时，只需要传送请求方式和路径</li>\n<li>灵活，可以发送任意类型的数据</li>\n<li>无状态，Http是无状态协议，无状态是指对事物处理没有记忆能力</li>\n</ol>\n</li>\n</ol>\n<hr>\n<h4 id=\"HTTP消息\"><a href=\"#HTTP消息\" class=\"headerlink\" title=\"HTTP消息\"></a>HTTP消息</h4><ol>\n<li><p><strong>HTTP消息有几种？</strong></p>\n<p> 两种，一个请求消息，一个响应消息。</p>\n</li>\n<li><p><strong>请求和响应的定义</strong></p>\n<ol>\n<li>当浏览器向服务器发送请求数据的时候，即http请求消息</li>\n<li>当服务器向浏览器发送响应数据的时候，即http响应消息</li>\n</ol>\n</li>\n</ol>\n<hr>\n<h4 id=\"HTTP请求消息\"><a href=\"#HTTP请求消息\" class=\"headerlink\" title=\"HTTP请求消息\"></a>HTTP请求消息</h4><ol>\n<li><p><strong>http请求包含几个部分？</strong></p>\n<p> 三个部分，请求方式，资源路径，http版本</p>\n</li>\n<li><p><strong>http常用的请求方式</strong></p>\n<table>\n<thead>\n<tr>\n<th>请求方式</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>GET</td>\n<td>请求获取请求行URL所标识的资源</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>向指定资源提交数据，请求服务器进行处理</td>\n</tr>\n<tr>\n<td>HEAD</td>\n<td>请求获取由URL所标识资源的响应消息头</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>将网页放到指定的URL位置上(上传/移动)</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>请求服务器删除URL所标识的资源</td>\n</tr>\n<tr>\n<td>TRACE</td>\n<td>请求服务器回送收到的请求消息，主要用于测试和诊断</td>\n</tr>\n<tr>\n<td>CONNECT</td>\n<td>保留将来使用</td>\n</tr>\n<tr>\n<td>OPTIONS</td>\n<td>请求查询服务器的性能，或查询与资源相关的选项和需求</td>\n</tr>\n</tbody></table>\n<h6 id=\"注意：浏览器表单默认的是GET请求\"><a href=\"#注意：浏览器表单默认的是GET请求\" class=\"headerlink\" title=\"注意：浏览器表单默认的是GET请求\"></a><em>注意：浏览器表单默认的是GET请求</em></h6><table>\n<thead>\n<tr>\n<th>请求方式</th>\n<th>区别</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>GET</td>\n<td>请求方式的参数信息都会在URL地址栏显示，而且通过请求参数传递数据，所以最多不超过1KB大小</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>请求内容隐藏在实体内容中，通过实体内容进行数据传递，所以没有数据大小限制</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>请求头字段</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Accept:text/html</td>\n<td>客户端希望接收HTML文本</td>\n</tr>\n<tr>\n<td>Accept:image/gif</td>\n<td>客户端希望接收GIF格式的图像资源</td>\n</tr>\n<tr>\n<td>Accept:image/*</td>\n<td>客户端可以接收所有image格式的子类型</td>\n</tr>\n<tr>\n<td>Accept:*/*</td>\n<td>客户端可以接收任意类型的数据</td>\n</tr>\n<tr>\n<td>Accept-Charset</td>\n<td>告知服务端，客户端所用的字符集</td>\n</tr>\n<tr>\n<td>Accept-Encoding</td>\n<td>用于指定客户端能够进行解码的数据编码方式</td>\n</tr>\n<tr>\n<td>Accept-Language</td>\n<td>客户端期望服务端返回那个国家的语言文档</td>\n</tr>\n<tr>\n<td>Host</td>\n<td>指定资源所在的主机和端口号</td>\n</tr>\n<tr>\n<td>Max-Forward</td>\n<td>指当前请求可以经过的代理服务器数量,每经过一个，数量减一</td>\n</tr>\n<tr>\n<td>Referer</td>\n<td>单击超链接向服务器发送GET请求时，浏览器会在发送的请求中加上该字段(防止盗链)</td>\n</tr>\n<tr>\n<td>User-Agent</td>\n<td>指定浏览器或者其他客户端程序所使用的操作系统及版本，浏览器及版本，浏览器渲染引擎，浏览器语言</td>\n</tr>\n</tbody></table>\n</li>\n</ol>\n<h4 id=\"HTTP响应消息\"><a href=\"#HTTP响应消息\" class=\"headerlink\" title=\"HTTP响应消息\"></a>HTTP响应消息</h4><ol>\n<li><p><strong>HTTP响应消息包含几个部分</strong></p>\n<p> 三个部分，响应状态行、响应消息头实体内容</p>\n</li>\n<li><p><strong>响应状态行</strong></p>\n<ol>\n<li><p><em>HTTP版本</em><br> 1.0、1.1</p>\n</li>\n<li><p><em>状态码及描述信息</em></p>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>描述信息</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1xx</td>\n<td>请求已经接受，需要继续处理</td>\n</tr>\n<tr>\n<td>2xx</td>\n<td>请求已经被服务器成功理解并接受</td>\n</tr>\n<tr>\n<td>3xx</td>\n<td>为完成请求，客户端需进一步细化请求</td>\n</tr>\n<tr>\n<td>4xx</td>\n<td>客户端的请求有错误</td>\n</tr>\n<tr>\n<td>5xx</td>\n<td>服务端出现错误</td>\n</tr>\n</tbody></table>\n</li>\n<li><p><em>常用的状态码</em></p>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>状态信息</th>\n<th>描述信息</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>200</td>\n<td>正常</td>\n<td>客户端请求成功，响应消息返回正常的请求结果</td>\n</tr>\n<tr>\n<td>400</td>\n<td>请求无效</td>\n<td>客户端不正确的语法格式</td>\n</tr>\n<tr>\n<td>403</td>\n<td>禁止</td>\n<td>服务端理解客户端的请求，但是拒绝处理</td>\n</tr>\n<tr>\n<td>404</td>\n<td>找不到</td>\n<td>表示服务器不存在客户端存在的资源</td>\n</tr>\n<tr>\n<td>500</td>\n<td>内部服务器错误</td>\n<td>大部分情况下是服务器端的CGI，jsp, ASP出现错误</td>\n</tr>\n</tbody></table>\n</li>\n</ol>\n</li>\n<li><p><strong>响应消息头</strong></p>\n<ol>\n<li><p><em>说明</em></p>\n<p> 服务器端向客户端传递附加信息，包括服务程序名，被请求资源需要的认证方式，重定向地址，客户端请求资源的最后修改时间。</p>\n</li>\n<li><p><em>常见的响应消息头</em></p>\n<table>\n<thead>\n<tr>\n<th>响应消息头</th>\n<th>描述内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Accept-Range</td>\n<td>说明服务器是否接收客户端使用Range请求头字段请求资源</td>\n</tr>\n<tr>\n<td>Age</td>\n<td>指出当前网页文档可以在客户端或代理服务器中缓存的有效时间</td>\n</tr>\n<tr>\n<td>Etag</td>\n<td>用于向客户端传送代表实体内容特征的标记信息，这些标记信息也称为实体标签，每个版本资源的实体标签是不同的，通过这个标签可以判断不同时间下，同一资源路径下的实体内容是否相同</td>\n</tr>\n<tr>\n<td>Location</td>\n<td>用于通知客户端获取请求文档的新地址</td>\n</tr>\n<tr>\n<td>Retry-After</td>\n<td>该字段可以与503状态码配合使用，告诉客户端什么时候可以重新发送请求，也可以与任何一个3xx状态码配合使用，告诉客户端处理重定向的最小延时时间</td>\n</tr>\n<tr>\n<td>Server</td>\n<td>用于指定服务器软件产品的名称</td>\n</tr>\n<tr>\n<td>Vary</td>\n<td>用于指定影响了服务器所生成的响应内容的那些请求头字段名</td>\n</tr>\n<tr>\n<td>Refresh</td>\n<td>用于告诉浏览器自动刷新页面的时间，是以秒为基本单位</td>\n</tr>\n<tr>\n<td>Content-Disposition</td>\n<td>用于服务器希望浏览器直接处理响应的实体内容，而是让用户选择将实体内容保存到一个文件中</td>\n</tr>\n</tbody></table>\n</li>\n</ol>\n</li>\n<li><p><strong>实体内容</strong></p>\n<p> 服务器根据客户端的请求所做出的处理结果</p>\n</li>\n</ol>\n<h4 id=\"HTTP-请求或响应-消息中的其他字段\"><a href=\"#HTTP-请求或响应-消息中的其他字段\" class=\"headerlink\" title=\"HTTP(请求或响应)消息中的其他字段\"></a>HTTP(请求或响应)消息中的其他字段</h4><ol>\n<li><p><strong>通用字段</strong></p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>字段描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Cache-Control</td>\n<td>用于通知位于客户端与服务器之间的代理服务器如何使用已缓存的页面</td>\n</tr>\n<tr>\n<td>Connection</td>\n<td>用于指定处理完本次请求/响应后，客户端与服务器是否还要保持连接</td>\n</tr>\n<tr>\n<td>Date</td>\n<td>用于表示HTTP消息产生的当前时间</td>\n</tr>\n<tr>\n<td>Pragma</td>\n<td>通知代理服务器和客户端如何使用缓存页面-</td>\n</tr>\n<tr>\n<td>Transfer-Encoding</td>\n<td>通过该字段通知客户端响应数据的长度，因为HTTP1.1协议是持久化协议</td>\n</tr>\n<tr>\n<td>Via</td>\n<td>用于指定HTTP消息所途径的代理服务器所使用的协议与主机名</td>\n</tr>\n<tr>\n<td>Warning</td>\n<td>用于说明其他头字段和状态码不能说明的一些警告信息</td>\n</tr>\n</tbody></table>\n</li>\n<li><p><strong>实体头字段</strong>   </p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>字段描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Allow</td>\n<td>指定请求资源所支持的请求方式</td>\n</tr>\n<tr>\n<td>Content-Language</td>\n<td>用于指定返回网页文档的国家语言类型</td>\n</tr>\n<tr>\n<td>Content-Length</td>\n<td>用于表示实体内容的长度</td>\n</tr>\n<tr>\n<td>Content-Location</td>\n<td>用于指定响应消息中实体内容的实际位置路径(当一个请求资源有多个国家语言版本的时候，每个国家语言版本都有自己的位置，这时，请求资源路径和响应的实体内容的实际位置路径可能是不同的)</td>\n</tr>\n<tr>\n<td>Content-Type</td>\n<td></td>\n</tr>\n<tr>\n<td>Content-Encoding</td>\n<td>用于指定实体内容的压缩编码格式，服务器端对实体内容的压缩不影响实体内容的MIME类型，被压缩的实体内容在客户端被解压的时候，MIME类型与Content-Type头字段指定的类型一致</td>\n</tr>\n</tbody></table>\n</li>\n</ol>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","comments":true,"link":"","tags":[{"name":"网络","slug":"网络","permalink":"https://carefulhuo.github.io/tags/%E7%BD%91%E7%BB%9C/"}]}]